ARCH		= avr
# MODULES		= runtime kernel crc stream mem buf net snmp nvram random
MODULES		= runtime kernel stream mem buf net snmp random timer uart cs8900 regexp

# Maximum optimization
# OPTIMIZE	= -O2 -DNDEBUG \
		  -frename-registers \
		  -fgcse-sm \
		  -fgcse-las \
		  -fgcse-after-reload \
		  -fivopts \
		  -fweb

# Debug mode, enable asserts
OPTIMIZE	= -O0 -g \
		  -frename-registers \
		  -fgcse-sm \
		  -fgcse-las \
		  -fgcse-after-reload \
		  -fivopts \
		  -fweb

# Allowed CPU types: mega103, mega128, mega161, mega2561, 90usb647.
CPU		= 90usb647
STARTUP		= startup100.S

# We use memcpy etc. with slightly different args,
# so we need to use no-builtin option to prevent conflict.
BINDIR		= /usr/local/avr461/bin
CC		:= $(BINDIR)/avr-gcc -Wall -mmcu=at$(CPU)
CC		+= $(shell if ( $(CC) --target-help | grep -q -- -mrodata=SECTION ); then echo -mrodata=.progmem; fi)
OPTIMIZE	+= $(shell if ( $(CC) --target-help | grep -q -- -moptimize-rodata ); then echo -moptimize-rodata; fi)
CFLAGS		= $(OPTIMIZE) -I$(OS)/sources -Werror -fno-builtin \
		  -fsigned-char -fmerge-all-constants -fstrict-aliasing \
		  -ffunction-sections -fdata-sections -mcall-prologues
ASFLAGS		= -Wa,-mmcu=at$(CPU) -I$(OS)/sources
DEPFLAGS	= -MT $@ -MD -MP -MF .deps/$*.dep
LDFLAGS		= -nostdlib -T $(TARGET)/ldscript.x $(TARGET)/startup.o -Wl,-O9,--gc-sections,--entry=__ld_entry,-Map=$@.map


LIBS		= -L$(TARGET) -luos -lgcc
AR		= $(BINDIR)/avr-ar
SIZE		= $(BINDIR)/avr-size
OBJDUMP		= $(BINDIR)/avr-objdump
OBJCOPY		= $(BINDIR)/avr-objcopy
NM		    = $(BINDIR)/avr-nm

CFLAGS +=  -DKHZ=2000
CFLAGS +=  -DAVR_DEBUG_UART1
CFLAGS +=  -DIDLE_TASK_STACKSZ=256


